{"version":3,"sources":["util.js","Course.jsx","Section.jsx","config.js","Calendar.jsx","Combinations.jsx","App.jsx","index.js"],"names":["stringToTime","string","_$exec","exec","_$exec2","Object","slicedToArray","hour","minute","Number","parseInt","timeToString","time","ampm","arguments","length","undefined","concat","periodToString","period","start","end","classes","_len","classList","Array","_key","filter","c","join","Course","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","expanded","setState","_this2","_this$props","course","expandable","onClick","onRemove","onTogglePinned","onToggleExcluded","onSetOverlayCrns","pinnedCrns","excludedCrns","react_default","a","createElement","className","style","backgroundColor","color","key","id","handleToggleExpanded","values","sections","section","includes","crn","map","dangerouslySetInnerHTML","__html","title","excluded","pinned","onMouseEnter","onMouseLeave","instructors","meetings","meeting","i","days","e","stopPropagation","Component","Section","overlay","preview","day","top","height","where","Calendar","overlayCrns","crns","fill","_","src_Section_0","Combinations","combinations","onSetPinnedCrns","combination","toConsumableArray","src_Calendar_0","PureComponent","App","courses","objectSpread","loadData","keyword","loaded","inputRef","React","createRef","handleSetPinnedCrns","bind","assertThisInitialized","handleSetOverlayCrns","handleAddCourse","handleChangeKeyword","handlePressEnter","handleRemoveCourse","handleToggleExcluded","handleTogglePinned","axios","get","then","res","data","keys","forEach","courseId","from","to","hex","component","Math","random","toString","getRandomColor","sectionId","push","apply","Set","_period$split","split","_period$split2","scheduleTypes","scheduleType","hasLab","lectures","labs","lecture","lab","startsWith","every","sectionGroups","groups","sectionGroupMeetings","_ref","sectionGroupHash","JSON","stringify","sectionGroup","hash","distinct","updateCombinations","_ref2$desiredCourses","_ref2","desiredCourses","_ref2$pinnedCrns","_ref2$excludedCrns","Cookies","set","json","parse","_json","_json$desiredCourses","_json$pinnedCrns","_json$excludedCrns","dispatch","_this3","update","updatedState","saveData","dfs","courseIndex","isIncluded","isPinned","hasConflict","some","section1","section2","meeting1","meeting2","pinnedLectures","pinnedLabs","find","toUpperCase","tbaCrns","current","focus","target","value","preventDefault","searchCourses","_this4","_this$state","reduce","credits","lib_default","text","src_Course_0","type","ref","onChange","placeholder","onKeyPress","slice","src_Combinations_0","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6ab5aba1.chunk.js","sourcesContent":["const stringToTime = string => {\n  const [, hour, minute, ampm] = /(\\d{1,2}):(\\d{2}) (a|p)m/.exec(string);\n  return ((ampm === 'p' ? 12 : 0) + Number.parseInt(hour % 12)) * 60 + Number.parseInt(minute);\n};\n\nconst timeToString = (time, ampm = true) => {\n  const hour = time / 60 | 0;\n  const minute = time % 60;\n  return `${hour > 12 ? hour - 12 : hour}:${minute < 10 ? '0' + minute : minute}${ampm ? ` ${hour < 12 ? 'a' : 'p'}m` : ''}`;\n};\n\nconst periodToString = period => period ? `${timeToString(period.start, false)} - ${timeToString(period.end)}` : 'TBA';\n\nconst getRandomColor = (from = 0, to = 256) => {\n  let hex = '#';\n  for (let i = 0; i < 3; i++) {\n    const component = (Math.random() * (to - from) + from | 0).toString(16);\n    hex += (component.length === 1 ? '0' : '') + component;\n  }\n  return hex;\n};\n\nconst hasConflictBetween = (section1, section2) =>\n  section1.meetings.some(meeting1 =>\n    section2.meetings.some(meeting2 =>\n      meeting1.period && meeting2.period &&\n      ['M', 'T', 'W', 'R', 'F'].some(day => meeting1.days.includes(day) && meeting2.days.includes(day)) &&\n      meeting1.period.start < meeting2.period.end && meeting2.period.start < meeting1.period.end));\n\nconst classes = (...classList) => classList.filter(c => c).join(' ');\n\nexport {\n  stringToTime,\n  timeToString,\n  periodToString,\n  getRandomColor,\n  hasConflictBetween,\n  classes,\n};\n","import React, { Component } from 'react';\nimport './Course.scss';\nimport { classes, periodToString } from './util';\n\nclass Course extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: false,\n    };\n  }\n\n  handleToggleExpanded(expanded = !this.state.expanded) {\n    this.setState({ expanded });\n  }\n\n  render() {\n    const { course, expandable, onClick, onRemove, onTogglePinned, onToggleExcluded, onSetOverlayCrns, pinnedCrns, excludedCrns } = this.props;\n    const { expanded } = this.state;\n\n    return (\n      <div className=\"Course\" style={{ backgroundColor: course.color }} key={course.id} onClick={onClick}>\n        <div className=\"course-header\" onClick={expandable ? () => this.handleToggleExpanded() : undefined}>\n          <div className=\"row\">\n            <span className=\"course_id\">{course.id}</span>\n            <span className=\"section_ids\">\n              {Object.values(course.sections).filter(section => pinnedCrns.includes(section.crn)).map(section => section.id).join(', ')}\n            </span>\n          </div>\n          <div className=\"row\">\n            <span className=\"course_title\" dangerouslySetInnerHTML={{ __html: course.title }}/>\n            {\n              expandable &&\n              <span className=\"toggle\">{expanded ? '-' : '+'}</span>\n            }\n          </div>\n        </div>\n        {\n          expanded &&\n          <div className=\"sections\">\n            {\n              Object.values(course.sections).map(section => {\n                const excluded = excludedCrns.includes(section.crn);\n                const pinned = pinnedCrns.includes(section.crn);\n                return (\n                  <div className={classes('section', excluded && 'excluded', pinned && 'pinned')}\n                       key={section.id} onClick={() => onTogglePinned(section)}\n                       onMouseEnter={() => onSetOverlayCrns([section.crn])}\n                       onMouseLeave={() => onSetOverlayCrns([])}>\n                    <div className=\"section-header\">\n                      <span className=\"section_id\">{section.id}</span>\n                      <span className=\"instructors\">{section.instructors.join(', ')}</span>\n                    </div>\n                    {\n                      !excluded &&\n                      <div className=\"meetings\">\n                        {\n                          section.meetings.map((meeting, i) => {\n                            return (\n                              <div className=\"meeting\" key={i}>\n                                <span className=\"days\">{meeting.days.join('')}</span>\n                                <span className=\"period\">{periodToString(meeting.period)}</span>\n                              </div>\n                            );\n                          })\n                        }\n                      </div>\n                    }\n                    <div className=\"actions\">\n                      <div className=\"exclude\"\n                           onClick={e => {\n                             e.stopPropagation();\n                             onToggleExcluded(section);\n                           }}>{excluded ? 'Include' : 'Exclude'}</div>\n                    </div>\n                  </div>\n                );\n              })\n            }\n          </div>\n        }\n        {\n          expanded &&\n          <div className=\"actions section-actions\">\n            <div className=\"dim\" onClick={() => onRemove(course)}>Remove</div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\n\nexport default Course;\n","import React, { Component } from 'react';\nimport './Section.scss';\nimport { classes, periodToString } from './util';\nimport { close, open } from './config';\n\nclass Section extends Component {\n  render() {\n    const { section, overlay, preview } = this.props;\n\n    return (\n      <div className={classes('Section', overlay && 'overlay')}>\n        {\n          section.meetings.map((meeting, i) => meeting.period && (\n            meeting.days.map(day => (\n              <div className={`meeting ${day}`} key={[i, day].join('-')}\n                   style={{\n                     top: (meeting.period.start - open) / (close - open) * 100 + '%',\n                     height: (meeting.period.end - meeting.period.start) / (close - open) * 100 + '%',\n                     backgroundColor: meeting.course.color,\n                   }}>\n                {\n                  !preview &&\n                  <div className=\"meeting-wrapper\">\n                    <span className=\"course_id\">{meeting.course.id} {meeting.section.id}</span>\n                    <span className=\"period\">{periodToString(meeting.period)}</span>\n                    <span className=\"where\">{meeting.where}</span>\n                    <span className=\"instructors\">{meeting.instructors.join(', ')}</span>\n                  </div>\n                }\n              </div>\n            ))\n          ))\n        }\n      </div>\n    );\n  }\n}\n\n\nexport default Section;\n","const open = 8 * 60;\n\nconst close = 21 * 60;\n\nconst TYPE_LECTURE = 'Lecture';\n\nconst TYPE_LAB = 'Supervised Laboratory';\n\nexport {\n  open,\n  close,\n  TYPE_LECTURE,\n  TYPE_LAB,\n};\n","import React, { Component } from 'react';\nimport './Calendar.scss';\nimport { close, open } from './config';\nimport { classes, timeToString } from './util';\nimport Section from './Section';\n\nclass Calendar extends Component {\n  render() {\n    const { className, pinnedCrns, overlayCrns, crns, preview } = this.props;\n\n    return (\n      <div className={classes('Calendar', preview && 'preview', className)}>\n        {\n          !preview &&\n          <div className=\"times\">\n            {\n              new Array((close - open) / 60).fill(0).map((_, i) => {\n                const time = open + i * 60;\n                return (\n                  <div className=\"time\" key={time}>\n                    <span className=\"label\">\n                      {timeToString(time)}\n                    </span>\n                  </div>\n                );\n              })\n            }\n          </div>\n        }\n        {\n          !preview &&\n          <div className=\"days\">\n            {\n              ['M', 'T', 'W', 'R', 'F'].map(day => (\n                <div className=\"day\" key={day}>\n                    <span className=\"label\">\n                      {day}\n                    </span>\n                </div>\n              ))\n            }\n          </div>\n        }\n        <div className=\"meetings\">\n          {\n            pinnedCrns.map(crn => (\n              <Section key={crn} section={crns[crn]} preview={preview}/>\n            ))\n          }\n          {\n            overlayCrns.filter(crn => !pinnedCrns.includes(crn)).map(crn => (\n              <Section key={crn} section={crns[crn]} overlay preview={preview}/>\n            ))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Calendar;\n","import React, { PureComponent } from 'react';\nimport './Combinations.scss';\nimport Calendar from './Calendar';\n\nclass Combinations extends PureComponent {\n  render() {\n    const { combinations, crns, pinnedCrns, onSetOverlayCrns, onSetPinnedCrns } = this.props;\n\n    return (\n      <div className=\"Combinations\">\n        {\n          combinations.map((combination, i) => (\n            <div className=\"combination\" key={i}\n                 onMouseEnter={() => onSetOverlayCrns(combination)}\n                 onMouseLeave={() => onSetOverlayCrns([])}\n                 onClick={() => onSetPinnedCrns([...pinnedCrns, ...combination])}>\n              <div className=\"number\">{i + 1}</div>\n              <Calendar className=\"preview\" pinnedCrns={[...pinnedCrns, ...combination]} overlayCrns={[]}\n                        crns={crns} key={i} preview/>\n            </div>\n          ))\n        }\n      </div>\n    );\n  }\n}\n\n\nexport default Combinations;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport './App.scss';\nimport { getRandomColor, hasConflictBetween, stringToTime } from './util';\nimport Course from './Course';\nimport Calendar from './Calendar';\nimport Cookies from 'js-cookie';\nimport { TYPE_LAB, TYPE_LECTURE } from './config';\nimport Combinations from './Combinations';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.courses = {};\n    this.crns = {};\n\n    this.state = {\n      ...this.loadData(),\n      combinations: [],\n      overlayCrns: [],\n      keyword: '',\n      loaded: false,\n    };\n\n    this.inputRef = React.createRef();\n\n    this.handleSetPinnedCrns = this.handleSetPinnedCrns.bind(this);\n    this.handleSetOverlayCrns = this.handleSetOverlayCrns.bind(this);\n    this.handleAddCourse = this.handleAddCourse.bind(this);\n    this.handleChangeKeyword = this.handleChangeKeyword.bind(this);\n    this.handlePressEnter = this.handlePressEnter.bind(this);\n    this.handleRemoveCourse = this.handleRemoveCourse.bind(this);\n    this.handleToggleExcluded = this.handleToggleExcluded.bind(this);\n    this.handleTogglePinned = this.handleTogglePinned.bind(this);\n  }\n\n  componentDidMount() {\n    const distinct = sections => {\n      let groups = {};\n      sections.forEach(section => {\n        const sectionGroupMeetings = section.meetings.map(({ days, period }) => ({ days, period }));\n        const sectionGroupHash = JSON.stringify(sectionGroupMeetings);\n        const sectionGroup = groups[sectionGroupHash];\n        if (sectionGroup) {\n          sectionGroup.sections.push(section);\n        } else {\n          groups[sectionGroupHash] = {\n            hash: sectionGroupHash,\n            meetings: sectionGroupMeetings,\n            sections: [section],\n          };\n        }\n      });\n      return groups;\n    };\n\n    axios.get(`./courses.json`)\n      .then(res => {\n        const crns = {};\n        const courses = res.data;\n        Object.keys(courses).forEach(courseId => {\n          const course = courses[courseId];\n          course.id = courseId;\n          course.color = getRandomColor(32, 160);\n          Object.keys(course.sections).forEach(sectionId => {\n            const section = course.sections[sectionId];\n            section.id = sectionId;\n            section.course = course;\n            const instructors = [];\n            section.meetings.forEach(meeting => instructors.push(...meeting.instructors));\n            section.instructors = [...new Set(instructors)];\n            crns[section.crn] = section;\n            section.meetings.forEach(meeting => {\n              meeting.course = course;\n              meeting.section = section;\n              const { days, period } = meeting;\n              if (days === '&nbsp;') {\n                meeting.days = [];\n              } else {\n                meeting.days = [...days];\n              }\n              if (period === 'TBA') {\n                meeting.period = undefined;\n              } else {\n                const [start, end] = period.split(' - ');\n                meeting.period = {\n                  start: stringToTime(start),\n                  end: stringToTime(end),\n                };\n              }\n            });\n          });\n          const sections = Object.values(course.sections);\n          const scheduleTypes = sections.map(section => section.scheduleType);\n          course.hasLab = scheduleTypes.includes(TYPE_LECTURE) && scheduleTypes.includes(TYPE_LAB);\n          if (course.hasLab) {\n            course.lectures = sections.filter(section => section.scheduleType === TYPE_LECTURE);\n            course.labs = sections.filter(section => section.scheduleType === TYPE_LAB);\n            course.lectures.forEach(lecture => lecture.labs = course.labs.filter(lab => lab.id.startsWith(lecture.id)));\n            course.labs.forEach(lab => lab.lectures = course.lectures.filter(lecture => lab.id.startsWith(lecture.id)));\n            if (course.lectures.every(lecture => !lecture.labs.length)) {\n              course.lectures.forEach(lecture => lecture.labs = course.labs);\n              course.labs.forEach(lab => lab.lectures = course.lectures);\n            }\n          } else {\n            course.sectionGroups = distinct(sections);\n          }\n        });\n\n        this.courses = courses;\n        this.crns = crns;\n        this.updateCombinations({ loaded: true });\n      });\n  }\n\n  saveData({ desiredCourses = [], pinnedCrns = [], excludedCrns = [] }) {\n    Cookies.set('data', JSON.stringify({ desiredCourses, pinnedCrns, excludedCrns }));\n  }\n\n  loadData() {\n    let json = null;\n    try {\n      json = JSON.parse(Cookies.get('data'));\n    } catch (e) {\n      json = {};\n    }\n    const { desiredCourses = [], pinnedCrns = [], excludedCrns = [] } = json;\n    return { desiredCourses, pinnedCrns, excludedCrns };\n  }\n\n  updateCombinations(dispatch) {\n    this.setState(state => {\n      const update = typeof dispatch === 'function' ? dispatch(state) : dispatch;\n      const updatedState = { ...state, ...update };\n      const { desiredCourses, pinnedCrns, excludedCrns } = updatedState;\n      this.saveData(updatedState);\n      const combinations = [];\n      const dfs = (courseIndex = 0, combination = []) => {\n        if (courseIndex === desiredCourses.length) {\n          combinations.push(combination);\n          return;\n        }\n        const course = this.courses[desiredCourses[courseIndex]];\n        const isIncluded = section => !excludedCrns.includes(section.crn);\n        const isPinned = section => pinnedCrns.includes(section.crn);\n        const hasConflict = section => [...pinnedCrns, ...combination].some(crn => hasConflictBetween(this.crns[crn], section));\n        if (course.hasLab) {\n          const pinnedLectures = course.lectures.filter(isPinned);\n          const pinnedLabs = course.labs.filter(isPinned);\n          if (pinnedLabs.length) {\n            pinnedLabs.forEach(lab => {\n              lab.lectures.filter(isIncluded).forEach(lecture => {\n                if (isPinned(lecture)) {\n                  dfs(courseIndex + 1, combination);\n                } else {\n                  if (hasConflict(lecture)) return;\n                  dfs(courseIndex + 1, [...combination, lecture.crn]);\n                }\n              });\n            });\n          } else if (pinnedLectures.length) {\n            pinnedLectures.forEach(lecture => {\n              lecture.labs.filter(isIncluded).forEach(lab => {\n                if (hasConflict(lab)) return;\n                dfs(courseIndex + 1, [...combination, lab.crn]);\n              });\n            });\n          } else {\n            course.lectures.filter(isIncluded).forEach(lecture => {\n              if (hasConflict(lecture)) return;\n              lecture.labs.filter(isIncluded).forEach(lab => {\n                if (hasConflict(lab)) return;\n                dfs(courseIndex + 1, [...combination, lecture.crn, lab.crn]);\n              });\n            });\n          }\n        } else {\n          const sections = Object.values(course.sections);\n          if (sections.some(isPinned)) {\n            dfs(courseIndex + 1, combination);\n          } else {\n            Object.values(course.sectionGroups).forEach(sectionGroup => {\n              const section = sectionGroup.sections.find(isIncluded);\n              if (!section || hasConflict(section)) return;\n              dfs(courseIndex + 1, [...combination, section.crn]);\n            });\n          }\n        }\n      };\n      dfs();\n      return { ...update, combinations };\n    });\n  }\n\n  searchCourses(keyword) {\n    return Object.values(this.courses).filter(course => course.id.startsWith(keyword.toUpperCase()));\n  }\n\n  handleRemoveCourse(course) {\n    this.updateCombinations(state => {\n      const desiredCourses = state.desiredCourses.filter(courseId => courseId !== course.id);\n      const pinnedCrns = state.pinnedCrns.filter(crn => !Object.values(course.sections).some(section => section.crn === crn));\n      const excludedCrns = state.excludedCrns.filter(crn => !Object.values(course.sections).some(section => section.crn === crn));\n      return { desiredCourses, pinnedCrns, excludedCrns };\n    });\n  }\n\n  handleAddCourse(course) {\n    this.updateCombinations(state => {\n      const { desiredCourses, excludedCrns } = state;\n      if (!desiredCourses.includes(course.id)) {\n        const tbaCrns = Object.values(course.sections)\n          .filter(section => section.meetings.some(meeting => !meeting.days.length || !meeting.period))\n          .map(section => section.crn);\n        return {\n          keyword: '',\n          desiredCourses: [...desiredCourses, course.id],\n          excludedCrns: [...excludedCrns, ...tbaCrns],\n        };\n      }\n      return { keyword: '' };\n    });\n    this.inputRef.current.focus();\n  }\n\n  handleTogglePinned(section) {\n    this.updateCombinations(state => {\n      const { pinnedCrns, excludedCrns } = state;\n      if (pinnedCrns.includes(section.crn)) {\n        return { pinnedCrns: pinnedCrns.filter(crn => crn !== section.crn) };\n      } else {\n        return {\n          pinnedCrns: [...pinnedCrns, section.crn],\n          excludedCrns: excludedCrns.filter(crn => crn !== section.crn),\n        };\n      }\n    });\n  }\n\n  handleToggleExcluded(section) {\n    this.updateCombinations(state => {\n      const { pinnedCrns, excludedCrns } = state;\n      if (excludedCrns.includes(section.crn)) {\n        return { excludedCrns: excludedCrns.filter(crn => crn !== section.crn) };\n      } else {\n        return {\n          excludedCrns: [...excludedCrns, section.crn],\n          pinnedCrns: pinnedCrns.filter(crn => crn !== section.crn),\n        };\n      }\n    });\n  }\n\n  handleChangeKeyword(e) {\n    const keyword = e.target.value;\n    this.setState({ keyword });\n  }\n\n  handlePressEnter(e) {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      const courses = this.searchCourses(this.state.keyword);\n      if (courses.length) this.handleAddCourse(courses[0]);\n    }\n  }\n\n  handleSetPinnedCrns(pinnedCrns) {\n    this.updateCombinations({ pinnedCrns });\n  }\n\n  handleSetOverlayCrns(overlayCrns) {\n    this.setState({ overlayCrns });\n  }\n\n  render() {\n    const { pinnedCrns, excludedCrns, desiredCourses, combinations, overlayCrns, keyword, loaded } = this.state;\n\n    return loaded && (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Calendar pinnedCrns={pinnedCrns} overlayCrns={overlayCrns} crns={this.crns}/>\n        </div>\n        <div className=\"sidebar\">\n          <div className=\"title\">\n            <span className=\"primary\">Spring 2019</span>\n            <span className=\"secondary\">\n              {pinnedCrns.reduce((credits, crn) => credits + this.crns[crn].credits, 0)} Credits\n            </span>\n          </div>\n          {\n            pinnedCrns.length > 0 &&\n            <CopyToClipboard className=\"crns\" text={pinnedCrns.join(', ')}>\n              <span>{pinnedCrns.join(', ')}</span>\n            </CopyToClipboard>\n          }\n          {\n            desiredCourses.map(courseId => {\n              const course = this.courses[courseId];\n              return (\n                <Course course={course} expandable key={course.id}\n                        onRemove={this.handleRemoveCourse}\n                        onTogglePinned={this.handleTogglePinned}\n                        onToggleExcluded={this.handleToggleExcluded}\n                        onSetOverlayCrns={this.handleSetOverlayCrns}\n                        pinnedCrns={pinnedCrns}\n                        excludedCrns={excludedCrns}/>\n              );\n            })\n          }\n          <div className=\"course-add\">\n            <input type=\"text\" ref={this.inputRef} value={keyword} onChange={this.handleChangeKeyword}\n                   className=\"keyword\"\n                   placeholder=\"XX 0000\" onKeyPress={this.handlePressEnter}/>\n            <div className=\"courses\">\n              {\n                keyword &&\n                this.searchCourses(keyword).slice(0, 10).map(course => (\n                  <Course course={course} onClick={() => this.handleAddCourse(course)} key={course.id}\n                          pinnedCrns={pinnedCrns}/>\n                ))\n              }\n            </div>\n          </div>\n          <div className=\"title\">\n            Auto Select\n          </div>\n          <div className=\"crns\" onClick={() => this.handleSetPinnedCrns([])}>\n            Reset Sections\n          </div>\n          <Combinations combinations={combinations} crns={this.crns} pinnedCrns={pinnedCrns}\n                        onSetOverlayCrns={this.handleSetOverlayCrns}\n                        onSetPinnedCrns={this.handleSetPinnedCrns}/>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}