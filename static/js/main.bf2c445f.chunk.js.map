{"version":3,"sources":["util.js","Course.jsx","Section.jsx","config.js","Calendar.jsx","App.jsx","index.js"],"names":["stringToTime","string","_$exec","exec","_$exec2","Object","slicedToArray","hour","minute","Number","parseInt","timeToString","time","ampm","arguments","length","undefined","concat","periodToString","period","start","end","classes","_len","classList","Array","_key","filter","c","join","Course","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","expanded","setState","_this2","_this$props","course","expandable","onClick","onRemove","onTogglePinned","onToggleExcluded","onSetOverlayCrns","pinnedCrns","excludedCrns","react_default","a","createElement","className","style","backgroundColor","color","key","id","handleToggleExpanded","values","sections","section","includes","crn","map","title","excluded","pinned","onMouseEnter","onMouseLeave","instructors","meetings","meeting","i","days","e","stopPropagation","Component","Section","overlay","preview","day","top","height","where","Calendar","overlayCrns","crns","fill","_","src_Section_0","App","courses","objectSpread","loadData","combinations","keyword","loaded","axios","get","then","res","data","keys","forEach","courseId","from","to","hex","component","Math","random","toString","getRandomColor","sectionGroups","sectionId","push","apply","toConsumableArray","Set","_period$split","split","_period$split2","sectionGroupMeetings","_ref","sectionGroupHash","JSON","stringify","sectionGroup","hash","updateCombinations","_ref2$desiredCourses","_ref2","desiredCourses","_ref2$pinnedCrns","_ref2$excludedCrns","Cookies","set","json","parse","_json","_json$desiredCourses","_json$pinnedCrns","_json$excludedCrns","dispatch","_this3","update","updatedState","saveData","dfs","courseIndex","combination","some","find","pinnedSection","section2","meeting1","meeting2","target","value","_this4","console","log","_this$state","src_Calendar_0","src_Course_0","handleRemoveCourse","handleTogglePinned","handleToggleExcluded","handleSetOverlayCrns","type","onChange","handleChangeKeyword","placeholder","startsWith","toUpperCase","slice","handleAddCourse","handleSetPinnedCrns","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.bf2c445f.chunk.js","sourcesContent":["const stringToTime = string => {\n  const [, hour, minute, ampm] = /(\\d{1,2}):(\\d{2}) (a|p)m/.exec(string);\n  return ((ampm === 'p' ? 12 : 0) + Number.parseInt(hour % 12)) * 60 + Number.parseInt(minute);\n};\n\nconst timeToString = (time, ampm = true) => {\n  const hour = time / 60 | 0;\n  const minute = time % 60;\n  return `${hour > 12 ? hour - 12 : hour}:${minute < 10 ? '0' + minute : minute}${ampm ? ` ${hour < 12 ? 'a' : 'p'}m` : ''}`;\n};\n\nconst periodToString = period => period ? `${timeToString(period.start, false)} - ${timeToString(period.end)}` : 'TBA';\n\nconst getRandomColor = (from = 0, to = 256) => {\n  let hex = '#';\n  for (let i = 0; i < 3; i++) {\n    const component = (Math.random() * (to - from) + from | 0).toString(16);\n    hex += (component.length === 1 ? '0' : '') + component;\n  }\n  return hex;\n};\n\nconst hasTimeConflict = (section1, section2) =>\n  section1.meetings.some(meeting1 =>\n    section2.meetings.some(meeting2 =>\n      meeting1.period && meeting2.period &&\n      ['M', 'T', 'W', 'R', 'F'].some(day => meeting1.days.includes(day) && meeting2.days.includes(day)) &&\n      meeting1.period.start < meeting2.period.end && meeting2.period.start < meeting1.period.end));\n\nconst classes = (...classList) => classList.filter(c => c).join(' ');\n\nexport {\n  stringToTime,\n  timeToString,\n  periodToString,\n  getRandomColor,\n  hasTimeConflict,\n  classes,\n};\n","import React, { Component } from 'react';\nimport './Course.scss';\nimport { classes, periodToString } from './util';\n\nclass Course extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: false,\n    };\n  }\n\n  handleToggleExpanded(expanded = !this.state.expanded) {\n    this.setState({ expanded });\n  }\n\n  render() {\n    const { course, expandable, onClick, onRemove, onTogglePinned, onToggleExcluded, onSetOverlayCrns, pinnedCrns, excludedCrns } = this.props;\n    const { expanded } = this.state;\n\n    return (\n      <div className=\"Course\" style={{ backgroundColor: course.color }} key={course.id} onClick={onClick}>\n        <div className=\"course-header\" onClick={expandable ? () => this.handleToggleExpanded() : undefined}>\n          <div className=\"row\">\n            <span className=\"course_id\">{course.id}</span>\n            <span className=\"section_ids\">\n              {Object.values(course.sections).filter(section => pinnedCrns.includes(section.crn)).map(section => section.id).join(', ')}\n            </span>\n          </div>\n          <div className=\"row\">\n            <span className=\"course_title\">{course.title}</span>\n            {\n              expandable &&\n              <span className=\"toggle\">{expanded ? '-' : '+'}</span>\n            }\n          </div>\n        </div>\n        {\n          expanded &&\n          <div className=\"sections\">\n            {\n              Object.values(course.sections).map(section => {\n                const excluded = excludedCrns.includes(section.crn);\n                const pinned = pinnedCrns.includes(section.crn);\n                return (\n                  <div className={classes('section', excluded && 'excluded', pinned && 'pinned')}\n                       key={section.id} onClick={() => onTogglePinned(section)}\n                       onMouseEnter={() => onSetOverlayCrns([section.crn])}\n                       onMouseLeave={() => onSetOverlayCrns([])}>\n                    <div className=\"section-header\">\n                      <span className=\"section_id\">{section.id}</span>\n                      <span className=\"instructors\">{section.instructors.join(', ')}</span>\n                    </div>\n                    {\n                      !excluded &&\n                      <div className=\"meetings\">\n                        {\n                          section.meetings.map((meeting, i) => {\n                            return (\n                              <div className=\"meeting\" key={i}>\n                                <span className=\"days\">{meeting.days.join('')}</span>\n                                <span className=\"period\">{periodToString(meeting.period)}</span>\n                              </div>\n                            );\n                          })\n                        }\n                      </div>\n                    }\n                    <div className=\"actions\">\n                      <div className=\"exclude\"\n                           onClick={e => {\n                             e.stopPropagation();\n                             onToggleExcluded(section);\n                           }}>{excluded ? 'Include' : 'Exclude'}</div>\n                    </div>\n                  </div>\n                );\n              })\n            }\n          </div>\n        }\n        {\n          expanded &&\n          <div className=\"actions section-actions\">\n            <div className=\"dim\" onClick={() => onRemove(course)}>Remove</div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\n\nexport default Course;\n","import React, { Component } from 'react';\nimport './Section.scss';\nimport { classes, periodToString } from './util';\nimport { close, open } from './config';\n\nclass Section extends Component {\n  render() {\n    const { section, overlay, preview } = this.props;\n\n    return (\n      <div className={classes('Section', overlay && 'overlay')}>\n        {\n          section.meetings.map((meeting, i) => meeting.period && (\n            meeting.days.map(day => (\n              <div className={`meeting ${day}`} key={[i, day].join('-')}\n                   style={{\n                     top: (meeting.period.start - open) / (close - open) * 100 + '%',\n                     height: (meeting.period.end - meeting.period.start) / (close - open) * 100 + '%',\n                     backgroundColor: meeting.course.color,\n                   }}>\n                {\n                  !preview &&\n                  <div className=\"meeting-wrapper\">\n                    <span className=\"course_id\">{meeting.course.id} {meeting.section.id}</span>\n                    <span className=\"period\">{periodToString(meeting.period)}</span>\n                    <span className=\"where\">{meeting.where}</span>\n                    <span className=\"instructors\">{meeting.instructors.join(', ')}</span>\n                  </div>\n                }\n              </div>\n            ))\n          ))\n        }\n      </div>\n    );\n  }\n}\n\n\nexport default Section;\n","const open = 8 * 60;\n\nconst close = 20 * 60;\n\nexport {\n  open,\n  close,\n};\n","import React, { Component } from 'react';\nimport './Calendar.scss';\nimport { close, open } from './config';\nimport { classes, timeToString } from './util';\nimport Section from './Section';\n\nclass Calendar extends Component {\n  render() {\n    const { className, pinnedCrns, overlayCrns, crns, preview } = this.props;\n\n    return (\n      <div className={classes('Calendar', preview && 'preview', className)}>\n        {\n          !preview &&\n          <div className=\"times\">\n            {\n              new Array((close - open) / 60).fill(0).map((_, i) => {\n                const time = open + i * 60;\n                return (\n                  <div className=\"time\" key={time}>\n                    <span className=\"label\">\n                      {timeToString(time)}\n                    </span>\n                  </div>\n                );\n              })\n            }\n          </div>\n        }\n        {\n          !preview &&\n          <div className=\"days\">\n            {\n              ['M', 'T', 'W', 'R', 'F'].map(day => (\n                <div className=\"day\" key={day}>\n                    <span className=\"label\">\n                      {day}\n                    </span>\n                </div>\n              ))\n            }\n          </div>\n        }\n        <div className=\"meetings\">\n          {\n            pinnedCrns.map(crn => (\n              <Section key={crn} section={crns[crn]} preview={preview}/>\n            ))\n          }\n          {\n            overlayCrns.filter(crn => !pinnedCrns.includes(crn)).map(crn => (\n              <Section key={crn} section={crns[crn]} overlay preview={preview}/>\n            ))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Calendar;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.scss';\nimport { getRandomColor, hasTimeConflict, stringToTime } from './util';\nimport Course from './Course';\nimport Calendar from './Calendar';\nimport Cookies from 'js-cookie';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.courses = {};\n    this.crns = {};\n\n    this.state = {\n      ...this.loadData(),\n      combinations: [],\n      overlayCrns: [],\n      keyword: '',\n      loaded: false,\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`./courses.json`)\n      .then(res => {\n        const crns = {};\n        const courses = res.data;\n        Object.keys(courses).forEach(courseId => {\n          const course = courses[courseId];\n          course.id = courseId;\n          course.color = getRandomColor(32, 160);\n          course.sectionGroups = {};\n          Object.keys(course.sections).forEach(sectionId => {\n            const section = course.sections[sectionId];\n            section.id = sectionId;\n            section.course = course;\n            const instructors = [];\n            section.meetings.forEach(meeting => instructors.push(...meeting.instructors));\n            section.instructors = [...new Set(instructors)];\n            crns[section.crn] = section;\n            section.meetings.forEach(meeting => {\n              meeting.course = course;\n              meeting.section = section;\n              const { days, period } = meeting;\n              if (days === '&nbsp;') {\n                meeting.days = [];\n              } else {\n                meeting.days = [...days];\n              }\n              if (period === 'TBA') {\n                meeting.period = undefined;\n              } else {\n                const [start, end] = period.split(' - ');\n                meeting.period = {\n                  start: stringToTime(start),\n                  end: stringToTime(end),\n                };\n              }\n            });\n            const sectionGroupMeetings = section.meetings.map(({ days, period }) => ({ days, period }));\n            const sectionGroupHash = JSON.stringify(sectionGroupMeetings);\n            const sectionGroup = course.sectionGroups[sectionGroupHash];\n            if (sectionGroup) {\n              sectionGroup.sections.push(section);\n            } else {\n              course.sectionGroups[sectionGroupHash] = {\n                hash: sectionGroupHash,\n                meetings: sectionGroupMeetings,\n                sections: [section],\n              };\n            }\n          });\n        });\n\n        this.courses = courses;\n        this.crns = crns;\n        this.updateCombinations({ loaded: true });\n      });\n  }\n\n  saveData({ desiredCourses = [], pinnedCrns = [], excludedCrns = [] }) {\n    Cookies.set('data', JSON.stringify({ desiredCourses, pinnedCrns, excludedCrns }));\n  }\n\n  loadData() {\n    let json = null;\n    try {\n      json = JSON.parse(Cookies.get('data'));\n    } catch (e) {\n      json = {};\n    }\n    const { desiredCourses = [], pinnedCrns = [], excludedCrns = [] } = json;\n    return { desiredCourses, pinnedCrns, excludedCrns };\n  }\n\n  updateCombinations(dispatch) {\n    this.setState(state => {\n      const update = typeof dispatch === 'function' ? dispatch(state) : dispatch;\n      const updatedState = { ...state, ...update };\n      const { desiredCourses, pinnedCrns, excludedCrns } = updatedState;\n      this.saveData(updatedState);\n      const combinations = [];\n      const dfs = (courseIndex = 0, combination = []) => {\n        if (courseIndex === desiredCourses.length) {\n          if (combination.length) combinations.push(combination);\n          return;\n        }\n        const course = this.courses[desiredCourses[courseIndex]];\n        if (Object.values(course.sections).some(section => pinnedCrns.includes(section.crn))) {\n          dfs(courseIndex + 1, combination);\n          return;\n        }\n        Object.values(course.sectionGroups).forEach(sectionGroup => {\n          const section = sectionGroup.sections.find(section => !excludedCrns.includes(section.crn));\n          if (!section) return;\n          const timeConflict = [...pinnedCrns, ...combination].map(crn => this.crns[crn]).some(pinnedSection => hasTimeConflict(pinnedSection, section));\n          if (timeConflict) return;\n          dfs(courseIndex + 1, [...combination, section.crn]);\n        });\n      };\n      dfs();\n      return { ...update, combinations };\n    });\n  }\n\n  handleRemoveCourse(course) {\n    this.updateCombinations(state => {\n      const pinnedCrns = state.pinnedCrns.filter(crn => !Object.values(course.sections).some(section => section.crn === crn));\n      const desiredCourses = state.desiredCourses.filter(courseId => courseId !== course.id);\n      return { pinnedCrns, desiredCourses };\n    });\n  }\n\n  handleAddCourse(course) {\n    this.updateCombinations(state => {\n      const { desiredCourses } = state;\n      if (!desiredCourses.includes(course.id)) {\n        return { keyword: '', desiredCourses: [...desiredCourses, course.id] };\n      }\n      return { keyword: '' };\n    });\n  }\n\n  handleTogglePinned(section) {\n    this.updateCombinations(state => {\n      const { pinnedCrns, excludedCrns } = state;\n      if (pinnedCrns.includes(section.crn)) {\n        return { pinnedCrns: pinnedCrns.filter(crn => crn !== section.crn) };\n      } else {\n        return {\n          pinnedCrns: [...pinnedCrns, section.crn],\n          excludedCrns: excludedCrns.filter(crn => crn !== section.crn),\n        };\n      }\n    });\n  }\n\n  handleToggleExcluded(section) {\n    this.updateCombinations(state => {\n      const { pinnedCrns, excludedCrns } = state;\n      if (excludedCrns.includes(section.crn)) {\n        return { excludedCrns: excludedCrns.filter(crn => crn !== section.crn) };\n      } else {\n        return {\n          excludedCrns: [...excludedCrns, section.crn],\n          pinnedCrns: pinnedCrns.filter(crn => crn !== section.crn),\n        };\n      }\n    });\n  }\n\n  handleChangeKeyword(e) {\n    const keyword = e.target.value;\n    this.setState({ keyword });\n  }\n\n  handleSetPinnedCrns(pinnedCrns) {\n    this.updateCombinations({ pinnedCrns });\n  }\n\n  handleSetOverlayCrns(overlayCrns) {\n    //if (JSON.stringify(overlayCrns) === JSON.stringify(this.state.overlayCrns)) return;//\n    this.setState({ overlayCrns });\n  }\n\n  render() {\n    console.log('render');\n    const { pinnedCrns, excludedCrns, desiredCourses, combinations, overlayCrns, keyword, loaded } = this.state;\n\n    return loaded && (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Calendar pinnedCrns={pinnedCrns} overlayCrns={overlayCrns} crns={this.crns}/>\n        </div>\n        <div className=\"sidebar\">\n          <div className=\"title\">\n            Spring 2019\n          </div>\n          {\n            desiredCourses.map(courseId => {\n              const course = this.courses[courseId];\n              return (\n                <Course course={course} expandable key={course.id}\n                        onRemove={course => this.handleRemoveCourse(course)}\n                        onTogglePinned={course => this.handleTogglePinned(course)}\n                        onToggleExcluded={course => this.handleToggleExcluded(course)}\n                        onSetOverlayCrns={overlayCrns => this.handleSetOverlayCrns(overlayCrns)}\n                        pinnedCrns={pinnedCrns}\n                        excludedCrns={excludedCrns}/>\n              );\n            })\n          }\n          <div className=\"course-add\">\n            <input type=\"text\" value={keyword} onChange={e => this.handleChangeKeyword(e)} className=\"keyword\"\n                   placeholder=\"XX 0000\"/>\n            <div className=\"courses\">\n              {\n                keyword &&\n                Object.values(this.courses).filter(course => course.id.startsWith(keyword.toUpperCase())).slice(0, 10).map(course => (\n                  <Course course={course} onClick={() => this.handleAddCourse(course)} key={course.id}\n                          pinnedCrns={pinnedCrns}/>\n                ))\n              }\n            </div>\n          </div>\n          <div className=\"title\">\n            Auto Select\n          </div>\n          <div className=\"combinations\">\n            {\n              combinations.map((combination, i) => (\n                <div className=\"combination\"\n                     onMouseEnter={() => this.handleSetOverlayCrns(combination)}\n                     onMouseLeave={() => this.handleSetOverlayCrns([])}\n                     onClick={() => this.handleSetPinnedCrns([...pinnedCrns, ...combination])}>\n                  <div className=\"number\">{i + 1}</div>\n                  <Calendar className=\"preview\" pinnedCrns={[...pinnedCrns, ...combination]} overlayCrns={[]}\n                            crns={this.crns} key={i} preview/>\n                </div>\n              ))\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}