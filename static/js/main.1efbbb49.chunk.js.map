{"version":3,"sources":["utils.js","Course.jsx","Section.jsx","constants.js","Calendar.jsx","Combinations.jsx","App.jsx","index.js"],"names":["stringToTime","string","_$exec","exec","_$exec2","Object","slicedToArray","hour","minute","Number","parseInt","timeToString","time","ampm","arguments","length","undefined","concat","periodToString","period","start","end","classes","_len","classList","Array","_key","filter","c","join","Course","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","expanded","setState","_this2","_this$props","className","course","expandable","onClick","onRemove","onTogglePinned","onToggleExcluded","onSetOverlayCrns","pinnedCrns","excludedCrns","react_default","a","createElement","style","backgroundColor","color","key","id","handleToggleExpanded","values","sections","section","includes","crn","map","dangerouslySetInnerHTML","__html","title","excluded","pinned","onMouseEnter","onMouseLeave","instructors","meetings","meeting","i","days","e","stopPropagation","Component","Section","overlay","preview","day","top","height","where","Calendar","overlayCrns","crns","fill","_","src_Section_0","Combinations","combinations","onSetPinnedCrns","combination","toConsumableArray","src_Calendar_0","PureComponent","App","courses","objectSpread","loadData","keyword","loaded","captureRef","React","createRef","inputRef","handleSetPinnedCrns","bind","assertThisInitialized","handleSetOverlayCrns","handleAddCourse","handleChangeKeyword","handlePressEnter","handleRemoveCourse","handleToggleExcluded","handleTogglePinned","handleDownload","axios","get","then","res","data","keys","forEach","courseId","from","to","hex","component","Math","random","toString","getRandomColor","sectionId","push","apply","Set","_period$split","split","_period$split2","scheduleTypes","scheduleType","hasLab","lectures","labs","lecture","lab","startsWith","every","sectionGroups","groups","sectionGroupMeetings","_ref","sectionGroupHash","JSON","stringify","sectionGroup","hash","distinct","updateCombinations","_ref2$desiredCourses","_ref2","desiredCourses","_ref2$pinnedCrns","_ref2$excludedCrns","Cookies","set","json","parse","_json","_json$desiredCourses","_json$pinnedCrns","_json$excludedCrns","dispatch","_this3","update","updatedState","saveData","dfs","courseIndex","isIncluded","isPinned","hasConflict","some","section1","section2","meeting1","meeting2","pinnedLectures","pinnedLabs","find","toUpperCase","tbaCrns","current","focus","target","value","preventDefault","searchCourses","domtoimage","toPng","width","offsetWidth","offsetHeight","left","transform","transform-origin","blob","saveAs","_this4","_this$state","ref","reduce","credits","lib_default","text","src_Course_0","type","onChange","placeholder","onKeyPress","slice","src_Combinations_0","href","rel","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1efbbb49.chunk.js","sourcesContent":["const stringToTime = string => {\n  const [, hour, minute, ampm] = /(\\d{1,2}):(\\d{2}) (a|p)m/.exec(string);\n  return ((ampm === 'p' ? 12 : 0) + Number.parseInt(hour % 12)) * 60 + Number.parseInt(minute);\n};\n\nconst timeToString = (time, ampm = true) => {\n  const hour = time / 60 | 0;\n  const minute = time % 60;\n  return `${hour > 12 ? hour - 12 : hour}:${minute < 10 ? '0' + minute : minute}${ampm ? ` ${hour < 12 ? 'a' : 'p'}m` : ''}`;\n};\n\nconst periodToString = period => period ? `${timeToString(period.start, false)} - ${timeToString(period.end)}` : 'TBA';\n\nconst getRandomColor = (from = 0, to = 256) => {\n  let hex = '#';\n  for (let i = 0; i < 3; i++) {\n    const component = (Math.random() * (to - from) + from | 0).toString(16);\n    hex += (component.length === 1 ? '0' : '') + component;\n  }\n  return hex;\n};\n\nconst hasConflictBetween = (section1, section2) =>\n  section1.meetings.some(meeting1 =>\n    section2.meetings.some(meeting2 =>\n      meeting1.period && meeting2.period &&\n      ['M', 'T', 'W', 'R', 'F'].some(day => meeting1.days.includes(day) && meeting2.days.includes(day)) &&\n      meeting1.period.start < meeting2.period.end && meeting2.period.start < meeting1.period.end));\n\nconst classes = (...classList) => classList.filter(c => c).join(' ');\n\nexport {\n  stringToTime,\n  timeToString,\n  periodToString,\n  getRandomColor,\n  hasConflictBetween,\n  classes,\n};\n","import React, { Component } from 'react';\nimport './Course.scss';\nimport { classes, periodToString } from './utils';\n\nclass Course extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: false,\n    };\n  }\n\n  handleToggleExpanded(expanded = !this.state.expanded) {\n    this.setState({ expanded });\n  }\n\n  render() {\n    const { className, course, expandable, onClick, onRemove, onTogglePinned, onToggleExcluded, onSetOverlayCrns, pinnedCrns, excludedCrns } = this.props;\n    const { expanded } = this.state;\n\n    return (\n      <div className={classes('Course', className)} style={{ backgroundColor: course.color }} key={course.id}\n           onClick={onClick}>\n        <div className=\"course-header\" onClick={expandable ? () => this.handleToggleExpanded() : undefined}>\n          <div className=\"row\">\n            <span className=\"course_id\">{course.id}</span>\n            <span className=\"section_ids\">\n              {Object.values(course.sections).filter(section => pinnedCrns.includes(section.crn)).map(section => section.id).join(', ')}\n            </span>\n          </div>\n          <div className=\"row\">\n            <span className=\"course_title\" dangerouslySetInnerHTML={{ __html: course.title }}/>\n            {\n              expandable &&\n              <span className=\"toggle\">{expanded ? '-' : '+'}</span>\n            }\n          </div>\n        </div>\n        {\n          expanded &&\n          <div className=\"sections\">\n            {\n              Object.values(course.sections).map(section => {\n                const excluded = excludedCrns.includes(section.crn);\n                const pinned = pinnedCrns.includes(section.crn);\n                return (\n                  <div className={classes('section', excluded && 'excluded', pinned && 'pinned')}\n                       key={section.id} onClick={() => onTogglePinned(section)}\n                       onMouseEnter={() => onSetOverlayCrns([section.crn])}\n                       onMouseLeave={() => onSetOverlayCrns([])}>\n                    <div className=\"section-header\">\n                      <span className=\"section_id\">{section.id}</span>\n                      <span className=\"instructors\">{section.instructors.join(', ')}</span>\n                    </div>\n                    {\n                      !excluded &&\n                      <div className=\"meetings\">\n                        {\n                          section.meetings.map((meeting, i) => {\n                            return (\n                              <div className=\"meeting\" key={i}>\n                                <span className=\"days\">{meeting.days.join('')}</span>\n                                <span className=\"period\">{periodToString(meeting.period)}</span>\n                              </div>\n                            );\n                          })\n                        }\n                      </div>\n                    }\n                    <div className=\"actions\">\n                      <div className=\"exclude\"\n                           onClick={e => {\n                             e.stopPropagation();\n                             onToggleExcluded(section);\n                           }}>{excluded ? 'Include' : 'Exclude'}</div>\n                    </div>\n                  </div>\n                );\n              })\n            }\n          </div>\n        }\n        {\n          expanded &&\n          <div className=\"actions section-actions\">\n            <div className=\"dim\" onClick={() => onRemove(course)}>Remove</div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\n\nexport default Course;\n","import React, { Component } from 'react';\nimport './Section.scss';\nimport { classes, periodToString } from './utils';\nimport { CLOSE, OPEN } from './constants';\n\nclass Section extends Component {\n  render() {\n    const { className, section, overlay, preview } = this.props;\n\n    return (\n      <div className={classes('Section', overlay && 'overlay', className)}>\n        {\n          section.meetings.map((meeting, i) => meeting.period && (\n            meeting.days.map(day => (\n              <div className={`meeting ${day}`} key={[i, day].join('-')}\n                   style={{\n                     top: (meeting.period.start - OPEN) / (CLOSE - OPEN) * 100 + '%',\n                     height: (meeting.period.end - meeting.period.start) / (CLOSE - OPEN) * 100 + '%',\n                     backgroundColor: meeting.course.color,\n                   }}>\n                {\n                  !preview &&\n                  <div className=\"meeting-wrapper\">\n                    <span className=\"course_id\">{meeting.course.id} {meeting.section.id}</span>\n                    <span className=\"period\">{periodToString(meeting.period)}</span>\n                    <span className=\"where\">{meeting.where}</span>\n                    <span className=\"instructors\">{meeting.instructors.join(', ')}</span>\n                  </div>\n                }\n              </div>\n            ))\n          ))\n        }\n      </div>\n    );\n  }\n}\n\n\nexport default Section;\n","const OPEN = 8 * 60;\nconst CLOSE = 21 * 60;\n\nconst TYPE_LECTURE = 'Lecture';\nconst TYPE_LAB = 'Supervised Laboratory';\n\nconst PNG_SCALE_FACTOR = 2;\n\nexport {\n  OPEN,\n  CLOSE,\n  TYPE_LECTURE,\n  TYPE_LAB,\n  PNG_SCALE_FACTOR,\n};\n","import React, { Component } from 'react';\nimport './Calendar.scss';\nimport { CLOSE, OPEN } from './constants';\nimport { classes, timeToString } from './utils';\nimport Section from './Section';\n\nclass Calendar extends Component {\n  render() {\n    const { className, pinnedCrns, overlayCrns, crns, preview } = this.props;\n\n    return (\n      <div className={classes('Calendar', preview && 'preview', className)}>\n        {\n          !preview &&\n          <div className=\"times\">\n            {\n              new Array((CLOSE - OPEN) / 60).fill(0).map((_, i) => {\n                const time = OPEN + i * 60;\n                return (\n                  <div className=\"time\" key={time}>\n                    <span className=\"label\">\n                      {timeToString(time)}\n                    </span>\n                  </div>\n                );\n              })\n            }\n          </div>\n        }\n        {\n          !preview &&\n          <div className=\"days\">\n            {\n              ['M', 'T', 'W', 'R', 'F'].map(day => (\n                <div className=\"day\" key={day}>\n                    <span className=\"label\">\n                      {day}\n                    </span>\n                </div>\n              ))\n            }\n          </div>\n        }\n        <div className=\"meetings\">\n          {\n            pinnedCrns.map(crn => (\n              <Section key={crn} section={crns[crn]} preview={preview}/>\n            ))\n          }\n          {\n            overlayCrns.filter(crn => !pinnedCrns.includes(crn)).map(crn => (\n              <Section key={crn} section={crns[crn]} overlay preview={preview}/>\n            ))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Calendar;\n","import React, { PureComponent } from 'react';\nimport './Combinations.scss';\nimport Calendar from './Calendar';\nimport { classes } from './utils';\n\nclass Combinations extends PureComponent {\n  render() {\n    const { className, combinations, crns, pinnedCrns, onSetOverlayCrns, onSetPinnedCrns } = this.props;\n\n    return (\n      <div className={classes('Combinations', className)}>\n        {\n          combinations.map((combination, i) => (\n            <div className=\"combination\" key={i}\n                 onMouseEnter={() => onSetOverlayCrns(combination)}\n                 onMouseLeave={() => onSetOverlayCrns([])}\n                 onClick={() => onSetPinnedCrns([...pinnedCrns, ...combination])}>\n              <div className=\"number\">{i + 1}</div>\n              <Calendar className=\"preview\" pinnedCrns={[...pinnedCrns, ...combination]} overlayCrns={[]}\n                        crns={crns} key={i} preview/>\n            </div>\n          ))\n        }\n      </div>\n    );\n  }\n}\n\n\nexport default Combinations;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport domtoimage from 'dom-to-image';\nimport saveAs from 'file-saver';\nimport './App.scss';\nimport { getRandomColor, hasConflictBetween, stringToTime } from './utils';\nimport Course from './Course';\nimport Calendar from './Calendar';\nimport Cookies from 'js-cookie';\nimport { IMAGE_WIDTH, PNG_SCALE_FACTOR, TYPE_LAB, TYPE_LECTURE } from './constants';\nimport Combinations from './Combinations';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.courses = {};\n    this.crns = {};\n\n    this.state = {\n      ...this.loadData(),\n      combinations: [],\n      overlayCrns: [],\n      keyword: '',\n      loaded: false,\n    };\n\n    this.captureRef = React.createRef();\n    this.inputRef = React.createRef();\n\n    this.handleSetPinnedCrns = this.handleSetPinnedCrns.bind(this);\n    this.handleSetOverlayCrns = this.handleSetOverlayCrns.bind(this);\n    this.handleAddCourse = this.handleAddCourse.bind(this);\n    this.handleChangeKeyword = this.handleChangeKeyword.bind(this);\n    this.handlePressEnter = this.handlePressEnter.bind(this);\n    this.handleRemoveCourse = this.handleRemoveCourse.bind(this);\n    this.handleToggleExcluded = this.handleToggleExcluded.bind(this);\n    this.handleTogglePinned = this.handleTogglePinned.bind(this);\n    this.handleDownload = this.handleDownload.bind(this);\n  }\n\n  componentDidMount() {\n    const distinct = sections => {\n      let groups = {};\n      sections.forEach(section => {\n        const sectionGroupMeetings = section.meetings.map(({ days, period }) => ({ days, period }));\n        const sectionGroupHash = JSON.stringify(sectionGroupMeetings);\n        const sectionGroup = groups[sectionGroupHash];\n        if (sectionGroup) {\n          sectionGroup.sections.push(section);\n        } else {\n          groups[sectionGroupHash] = {\n            hash: sectionGroupHash,\n            meetings: sectionGroupMeetings,\n            sections: [section],\n          };\n        }\n      });\n      return groups;\n    };\n\n    axios.get(`./courses.json`)\n      .then(res => {\n        const crns = {};\n        const courses = res.data;\n        Object.keys(courses).forEach(courseId => {\n          const course = courses[courseId];\n          course.id = courseId;\n          course.color = getRandomColor(32, 160);\n          Object.keys(course.sections).forEach(sectionId => {\n            const section = course.sections[sectionId];\n            section.id = sectionId;\n            section.course = course;\n            const instructors = [];\n            section.meetings.forEach(meeting => instructors.push(...meeting.instructors));\n            section.instructors = [...new Set(instructors)];\n            crns[section.crn] = section;\n            section.meetings.forEach(meeting => {\n              meeting.course = course;\n              meeting.section = section;\n              const { days, period } = meeting;\n              if (days === '&nbsp;') {\n                meeting.days = [];\n              } else {\n                meeting.days = [...days];\n              }\n              if (period === 'TBA') {\n                meeting.period = undefined;\n              } else {\n                const [start, end] = period.split(' - ');\n                meeting.period = {\n                  start: stringToTime(start),\n                  end: stringToTime(end),\n                };\n              }\n            });\n          });\n          const sections = Object.values(course.sections);\n          const scheduleTypes = sections.map(section => section.scheduleType);\n          course.hasLab = scheduleTypes.includes(TYPE_LECTURE) && scheduleTypes.includes(TYPE_LAB);\n          if (course.hasLab) {\n            course.lectures = sections.filter(section => section.scheduleType === TYPE_LECTURE);\n            course.labs = sections.filter(section => section.scheduleType === TYPE_LAB);\n            course.lectures.forEach(lecture => lecture.labs = course.labs.filter(lab => lab.id.startsWith(lecture.id)));\n            course.labs.forEach(lab => lab.lectures = course.lectures.filter(lecture => lab.id.startsWith(lecture.id)));\n            if (course.lectures.every(lecture => !lecture.labs.length)) {\n              course.lectures.forEach(lecture => lecture.labs = course.labs);\n              course.labs.forEach(lab => lab.lectures = course.lectures);\n            }\n          } else {\n            course.sectionGroups = distinct(sections);\n          }\n        });\n\n        this.courses = courses;\n        this.crns = crns;\n        this.updateCombinations({ loaded: true });\n      });\n  }\n\n  saveData({ desiredCourses = [], pinnedCrns = [], excludedCrns = [] }) {\n    Cookies.set('data', JSON.stringify({ desiredCourses, pinnedCrns, excludedCrns }));\n  }\n\n  loadData() {\n    let json = null;\n    try {\n      json = JSON.parse(Cookies.get('data'));\n    } catch (e) {\n      json = {};\n    }\n    const { desiredCourses = [], pinnedCrns = [], excludedCrns = [] } = json;\n    return { desiredCourses, pinnedCrns, excludedCrns };\n  }\n\n  updateCombinations(dispatch) {\n    this.setState(state => {\n      const update = typeof dispatch === 'function' ? dispatch(state) : dispatch;\n      const updatedState = { ...state, ...update };\n      const { desiredCourses, pinnedCrns, excludedCrns } = updatedState;\n      this.saveData(updatedState);\n      const combinations = [];\n      const dfs = (courseIndex = 0, combination = []) => {\n        if (courseIndex === desiredCourses.length) {\n          combinations.push(combination);\n          return;\n        }\n        const course = this.courses[desiredCourses[courseIndex]];\n        const isIncluded = section => !excludedCrns.includes(section.crn);\n        const isPinned = section => pinnedCrns.includes(section.crn);\n        const hasConflict = section => [...pinnedCrns, ...combination].some(crn => hasConflictBetween(this.crns[crn], section));\n        if (course.hasLab) {\n          const pinnedLectures = course.lectures.filter(isPinned);\n          const pinnedLabs = course.labs.filter(isPinned);\n          if (pinnedLabs.length) {\n            pinnedLabs.forEach(lab => {\n              lab.lectures.filter(isIncluded).forEach(lecture => {\n                if (isPinned(lecture)) {\n                  dfs(courseIndex + 1, combination);\n                } else {\n                  if (hasConflict(lecture)) return;\n                  dfs(courseIndex + 1, [...combination, lecture.crn]);\n                }\n              });\n            });\n          } else if (pinnedLectures.length) {\n            pinnedLectures.forEach(lecture => {\n              lecture.labs.filter(isIncluded).forEach(lab => {\n                if (hasConflict(lab)) return;\n                dfs(courseIndex + 1, [...combination, lab.crn]);\n              });\n            });\n          } else {\n            course.lectures.filter(isIncluded).forEach(lecture => {\n              if (hasConflict(lecture)) return;\n              lecture.labs.filter(isIncluded).forEach(lab => {\n                if (hasConflict(lab)) return;\n                dfs(courseIndex + 1, [...combination, lecture.crn, lab.crn]);\n              });\n            });\n          }\n        } else {\n          const sections = Object.values(course.sections);\n          if (sections.some(isPinned)) {\n            dfs(courseIndex + 1, combination);\n          } else {\n            Object.values(course.sectionGroups).forEach(sectionGroup => {\n              const section = sectionGroup.sections.find(isIncluded);\n              if (!section || hasConflict(section)) return;\n              dfs(courseIndex + 1, [...combination, section.crn]);\n            });\n          }\n        }\n      };\n      dfs();\n      return { ...update, combinations };\n    });\n  }\n\n  searchCourses(keyword) {\n    return Object.values(this.courses).filter(course => course.id.startsWith(keyword.toUpperCase()));\n  }\n\n  handleRemoveCourse(course) {\n    this.updateCombinations(state => {\n      const desiredCourses = state.desiredCourses.filter(courseId => courseId !== course.id);\n      const pinnedCrns = state.pinnedCrns.filter(crn => !Object.values(course.sections).some(section => section.crn === crn));\n      const excludedCrns = state.excludedCrns.filter(crn => !Object.values(course.sections).some(section => section.crn === crn));\n      return { desiredCourses, pinnedCrns, excludedCrns };\n    });\n  }\n\n  handleAddCourse(course) {\n    this.updateCombinations(state => {\n      const { desiredCourses, excludedCrns } = state;\n      if (!desiredCourses.includes(course.id)) {\n        const tbaCrns = Object.values(course.sections)\n          .filter(section => section.meetings.some(meeting => !meeting.days.length || !meeting.period))\n          .map(section => section.crn);\n        return {\n          keyword: '',\n          desiredCourses: [...desiredCourses, course.id],\n          excludedCrns: [...excludedCrns, ...tbaCrns],\n        };\n      }\n      return { keyword: '' };\n    });\n    this.inputRef.current.focus();\n  }\n\n  handleTogglePinned(section) {\n    this.updateCombinations(state => {\n      const { pinnedCrns, excludedCrns } = state;\n      if (pinnedCrns.includes(section.crn)) {\n        return { pinnedCrns: pinnedCrns.filter(crn => crn !== section.crn) };\n      } else {\n        return {\n          pinnedCrns: [...pinnedCrns, section.crn],\n          excludedCrns: excludedCrns.filter(crn => crn !== section.crn),\n        };\n      }\n    });\n  }\n\n  handleToggleExcluded(section) {\n    this.updateCombinations(state => {\n      const { pinnedCrns, excludedCrns } = state;\n      if (excludedCrns.includes(section.crn)) {\n        return { excludedCrns: excludedCrns.filter(crn => crn !== section.crn) };\n      } else {\n        return {\n          excludedCrns: [...excludedCrns, section.crn],\n          pinnedCrns: pinnedCrns.filter(crn => crn !== section.crn),\n        };\n      }\n    });\n  }\n\n  handleChangeKeyword(e) {\n    const keyword = e.target.value;\n    this.setState({ keyword });\n  }\n\n  handlePressEnter(e) {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      const courses = this.searchCourses(this.state.keyword);\n      if (courses.length) this.handleAddCourse(courses[0]);\n    }\n  }\n\n  handleSetPinnedCrns(pinnedCrns) {\n    this.updateCombinations({ pinnedCrns });\n  }\n\n  handleSetOverlayCrns(overlayCrns) {\n    this.setState({ overlayCrns });\n  }\n\n  handleDownload() {\n    const { current } = this.captureRef;\n    domtoimage.toPng(current, {\n      width: current.offsetWidth * PNG_SCALE_FACTOR,\n      height: current.offsetHeight * PNG_SCALE_FACTOR,\n      style: {\n        'left': 0,\n        'transform': `scale(${PNG_SCALE_FACTOR})`,\n        'transform-origin': 'top left',\n      },\n    }).then(blob => saveAs(blob, 'schedule.png'));\n  }\n\n  render() {\n    const { pinnedCrns, excludedCrns, desiredCourses, combinations, overlayCrns, keyword, loaded } = this.state;\n\n    return loaded && (\n      <div className=\"App\">\n        <div className=\"calendar-container\">\n          <Calendar pinnedCrns={pinnedCrns} overlayCrns={overlayCrns} crns={this.crns}/>\n        </div>\n        <div className=\"capture-container\" ref={this.captureRef}>\n          <Calendar className=\"fake-calendar\" pinnedCrns={pinnedCrns} overlayCrns={overlayCrns} crns={this.crns}/>\n        </div>\n        <div className=\"sidebar\">\n          <div className=\"title\">\n            <span className=\"primary\">Spring 2019</span>\n            <span className=\"secondary\">\n              {pinnedCrns.reduce((credits, crn) => credits + this.crns[crn].credits, 0)} Credits\n            </span>\n          </div>\n          <div className=\"scroller\">\n            {\n              pinnedCrns.length > 0 &&\n              <CopyToClipboard className=\"button\" text={pinnedCrns.join(', ')}>\n                <span>{pinnedCrns.join(', ')}</span>\n              </CopyToClipboard>\n            }\n            <div className=\"courses\">\n              {\n                desiredCourses.map(courseId => {\n                  const course = this.courses[courseId];\n                  return (\n                    <Course course={course} expandable key={course.id}\n                            onRemove={this.handleRemoveCourse}\n                            onTogglePinned={this.handleTogglePinned}\n                            onToggleExcluded={this.handleToggleExcluded}\n                            onSetOverlayCrns={this.handleSetOverlayCrns}\n                            pinnedCrns={pinnedCrns}\n                            excludedCrns={excludedCrns}/>\n                  );\n                })\n              }\n            </div>\n            <div className=\"course-add\">\n              <input type=\"text\" ref={this.inputRef} value={keyword} onChange={this.handleChangeKeyword}\n                     className=\"keyword\"\n                     placeholder=\"XX 0000\" onKeyPress={this.handlePressEnter}/>\n              <div className=\"autocomplete\">\n                {\n                  keyword &&\n                  this.searchCourses(keyword).slice(0, 10).map(course => (\n                    <Course course={course} onClick={() => this.handleAddCourse(course)} key={course.id}\n                            pinnedCrns={pinnedCrns}/>\n                  ))\n                }\n              </div>\n            </div>\n            {\n              pinnedCrns.length > 0 &&\n              <div className=\"button\" onClick={() => this.handleSetPinnedCrns([])}>\n                Reset Sections\n              </div>\n            }\n            <Combinations className=\"combinations\" combinations={combinations} crns={this.crns} pinnedCrns={pinnedCrns}\n                          onSetOverlayCrns={this.handleSetOverlayCrns}\n                          onSetPinnedCrns={this.handleSetPinnedCrns}/>\n          </div>\n          <div className=\"button\" onClick={this.handleDownload}>\n            Download as PNG\n          </div>\n          <a className=\"button\" href=\"https://github.com/parkjs814/gt-scheduler\" rel=\"noopener\" target=\"_blank\">\n            Fork me on GitHub\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}